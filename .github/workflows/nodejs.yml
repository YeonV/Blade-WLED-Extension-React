on:
  push:  
    branches: [ master ]
  pull_request:
    branches: [ master ]
    # Sequence of patterns matched against refs/tags
    #tags:
    #- 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Extension

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
         node-version: ${{ matrix.node-version }}
      - name: Install Node Modules
        run: npm install -y
      - name: Build project 
        run: npm run build
      - run: mv build Blade_WLED
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          filename: 'Blade_WLED.zip'
          path: 'Blade_WLED'
          exclusions: '*.git* /*node_modules/* .editorconfig'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tag_name: ${{ github.ref }}
          # release_name: Release ${{ github.ref }}
          tag_name: v0.7.3b
          release_name: BetaReleases
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Blade_WLED.zip
          asset_name: Blade_WLED.zip
          asset_content_type: application/zip



